#N canvas 1 51 548 591 10;
#X floatatom 25 309 5 0 0 0 - - -;
#X floatatom 246 310 5 0 0 0 - - -;
#X floatatom 26 465 5 0 0 0 - - -;
#X floatatom 245 455 5 0 0 0 - - -;
#X obj 246 227 any_old_abstraction;
#X obj 245 375 any_other_abstraction 2;
#X text 23 11 You can make reusable modules of code by saving your
patches and calling them as "abstractions". To make an abstraction
\, simply open a new window \, copy or patch the objects ect you want
into it and save it with a unique name. As long as you main patch is
in the same folder you saved the abstraction to \, or the folder with
your abstraction is in your "path" \, you can make an object with the
name you gave the abstraction and it will create.;
#X text 24 339 This abstraction takes a creation argument for its name:
;
#X text 23 180 This abstraction includes a unique variable for its
name that we will look at in the next patch:;
#X text 24 132 These abstractions are saved in the same folder you
are in now: /01.control;
#X text 25 487 If you open \, change and save one copy of the abstraction
\, all copies are affected! This is the main difference between an
abstraction and a subpatch.;
#X text 282 555 derek@umatic.nl;
#X obj 25 226 any_old_abstraction;
#X obj 26 375 any_other_abstraction 1;
#X connect 4 0 1 0;
#X connect 5 0 3 0;
#X connect 12 0 0 0;
#X connect 13 0 2 0;
