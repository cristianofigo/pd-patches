#N canvas 380 158 507 465 10;
#N canvas 0 0 346 535 init_hanning 0;
#X obj 73 217 / 10;
#X obj 55 278 line 0 0.1;
#X msg 119 246 0;
#X obj 54 176 t f f b;
#X obj 54 239 pack;
#X obj 55 301 t f f;
#X obj 54 152 - 1;
#X obj 74 114 t f f;
#X obj 55 359 * 3.14159;
#X obj 55 381 sin;
#X msg 55 401 \$1 \$1;
#X obj 55 423 *;
#X text 119 334 0...0.99;
#X text 128 359 0...pi;
#X text 79 423 hanning;
#X obj 99 60 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 99 39 loadbang;
#X text 86 381 half-sine;
#X msg 55 88 1024;
#X obj 55 448 tabwrite hanning;
#X obj 74 333 / 2048;
#X obj 100 88 f 4096;
#X connect 0 0 4 1;
#X connect 1 0 5 0;
#X connect 2 0 1 0;
#X connect 3 0 4 0;
#X connect 3 1 0 0;
#X connect 3 2 2 0;
#X connect 4 0 1 0;
#X connect 5 0 20 0;
#X connect 5 1 19 1;
#X connect 6 0 3 0;
#X connect 7 0 6 0;
#X connect 7 1 20 1;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 11 0 19 0;
#X connect 15 0 21 0;
#X connect 16 0 15 0;
#X connect 18 0 7 0;
#X connect 20 0 8 0;
#X connect 21 0 7 0;
#X restore 285 412 pd init_hanning;
#X obj 278 389 table hanning 4096;
#X obj 112 401 stereo-out~;
#X obj 48 177 ssampler~;
#X text 18 14 FFT CONVOLUTION;
#N canvas 513 340 627 438 fft-convolution~ 0;
#X obj 25 69 inlet~;
#X obj 88 391 outlet~;
#X obj 137 90 tabreceive~ hanning;
#X obj 25 165 rfft~;
#X obj 89 301 rifft~;
#X obj 26 114 *~;
#X text 110 116 windowing function;
#X obj 299 69 inlet~;
#X obj 300 116 *~;
#X obj 300 163 rfft~;
#X obj 89 221 *~;
#X obj 120 220 *~;
#X obj 172 220 *~;
#X obj 203 220 *~;
#X text 249 244 (x+yi)*(a+bi)=x*a - y*b +i(y*a + x*b);
#X obj 89 254 -~;
#X obj 173 252 +~;
#X obj 88 330 *~;
#X obj 119 330 tabreceive~ hanning;
#X text 141 18 block~ object specifies vector size of 4096 and overlap
4 This window now computes blocks of 4096 samples.;
#X obj 29 21 block~ 4096 4;
#X text 114 162 to frequency domain;
#X text 246 223 multiplication of complex values:;
#X text 146 299 back to time domain;
#X text 270 331 hanning window again to smooth the signal;
#X text 162 365 rescale the signal: 1 / (4096*4);
#X obj 88 365 /~ 16384;
#X connect 0 0 5 0;
#X connect 2 0 5 1;
#X connect 2 0 8 1;
#X connect 3 0 10 0;
#X connect 3 0 13 0;
#X connect 3 1 11 0;
#X connect 3 1 12 0;
#X connect 4 0 17 0;
#X connect 5 0 3 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 10 1;
#X connect 9 0 12 1;
#X connect 9 1 11 1;
#X connect 9 1 13 1;
#X connect 10 0 15 0;
#X connect 11 0 15 1;
#X connect 12 0 16 0;
#X connect 13 0 16 1;
#X connect 15 0 4 0;
#X connect 16 0 4 1;
#X connect 17 0 26 0;
#X connect 18 0 17 1;
#X connect 26 0 1 0;
#X restore 112 318 pd fft-convolution~;
#X obj 328 187 ssampler~;
#X obj 220 235 noise~;
#X text 17 46 You can combine 2 sounds with convolution. E.g. you can
record the impulse response of a church and then convolve it with your
speeck - then it sounds like you are speaking in a church ...;
#X text 17 105 Convolution is a multiplication in frequency domain
\, so it's quite easy to compute (see fft-convolution~).;
#X obj 166 230 adc~;
#X connect 3 0 5 0;
#X connect 5 0 2 0;
#X connect 5 0 2 1;
#X connect 6 0 5 1;
